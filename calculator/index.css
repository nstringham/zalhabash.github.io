:root {
    /*colors*/
    --background-color: #ffffff;
    --text-color: #000000;
    --display-color: #77be7d;
    --button-color: rgb(178, 250, 180);
    --button-color-hover: #91df95;
    --button-color-active: #7db980;
    --scroll-thumb-color: rgb(0 0 0 / 18%);
    --scroll-track-color: rgb(255 255 255 / 25%);

    --button-size: max(min(15vh, 22vw, 100px), 25px);
    --font-size: calc(var(--button-size) / 3);
}

/* dark mode */
@media (prefers-color-scheme: dark) {
    :root {
        --background-color: #121212;
        /*why? eyestrain, LCD's can't show black, OLED smear problems*/
        --text-color: #ffffff;
        --display-color: #005005;
        --button-color: #2e7d32;
        --button-color-hover: #1a631e;
        --button-color-active: #134e16;
        --scroll-thumb-color: rgb(255 255 255 / 35%);
        --scroll-track-color: rgb(0 0 0 / 13%);
    }
    /*for Apple safe area*/
    #status-bar-fill {
        display: none;
    }
}

body {
    background-color: var(--background-color);
    color: var(--text-color);
    display: grid;
    place-items: center;
    min-height: 100vh;
    box-sizing: border-box;
    margin: 0;
    /* for Apple safe area */
    padding-top: env(safe-area-inset-top);
    padding-bottom: env(safe-area-inset-bottom);
    padding-left: env(safe-area-inset-left);
    padding-right: env(safe-area-inset-right);
}
/*for Apple safe area*/
#status-bar-fill {
    position: fixed;
    top: 0;
    right: 0;
    left: 0;
    height: env(safe-area-inset-top);
    background-color: #66bb6a;
}

.wrapper {
    /* div.wrapper -- specificity */
    display: grid;
    grid-template-columns: repeat(4, var(--button-size));
    grid-template-rows: repeat(6, var(--button-size));
    grid-template-areas:
        "D D D D"
        "n B C ×"
        ". . . ÷"
        ". . . A"
        ". . . S"
        "d . E E";
    gap: calc(var(--button-size) / 10);
    font-family: 'Roboto Mono', sans-serif;
}

/* landscape */
@media (min-aspect-ratio: 9/9) and (max-height: 600px) {
    :root {
        --button-size: max(18vmin, 25px);
    }

    .wrapper {
        grid-template-columns: repeat(5, var(--button-size));
        grid-template-rows: repeat(5, var(--button-size));
        grid-template-areas:
            "D D D D D"
            ". . . × C"
            ". . . ÷ B"
            ". . . A E"
            "d . n S E";
    }
}

.wrapper>* {
    border-radius: 8px;
    font-family: 'Roboto Mono', sans-serif;
    /*font weight doesn't have to be dynamic*/
    font-weight: 500;
    font-size: var(--font-size);
}

#display {
    grid-area: D;
    grid-column: 1 / -1;
    /* 1 is the line before the first item */
    display: flex;
    flex-direction: row-reverse;
    align-items: center;
    background-color: var(--display-color);
    padding-inline: 24px;
    /* padding on the right and the left */
    overflow-x: auto;
    scroll-behavior: smooth;
    /* Firefox Scrollbar */
    scrollbar-color: var(--scroll-thumb-color) var(--scroll-track-color);
}

/* Webkit Stuff Scrollbar */
.style-scrollbar #display::-webkit-scrollbar {
    height: 12px;
    background-color: var(--scroll-track-color);
}

.style-scrollbar #display::-webkit-scrollbar-thumb {
    background-color: var(--scroll-thumb-color);
    border-radius: 8px;
}

.wrapper button {
    display: grid;
    place-items: center;
    background-color: var(--button-color);
    color: var(--text-color);
    border: none;
    outline: none;
    transition: background-color 0.1s ease-in-out;
    /*slow at beg and end, fast in middle*/


    /* since on hover you have background color, can get rid of deafault */

    /* box shadow animation: box-shadow: 2px 4px rgb(59, 59, 59); */

}

.wrapper button>svg {
    block-size: var(--font-size);
}

/* every time you have hover, add focus (focus-visible is better) */
.wrapper button:hover,
.wrapper button:focus-visible {
    background-color: var(--button-color-hover);
}

/* when button pressed: background color stays dark, button shifts down */
.wrapper button:active {
    background-color: var(--button-color-active);

    /* box shadow animation: box-shadow: 1px 2px rgb(59, 59, 59);
    transform: translateY(2px);
    transform: translateX(2px) */
}

#negative {
    grid-area: n;
}

#decimal {
    grid-area: d;
}

#× {
    grid-area: ×;
}

#÷ {
    grid-area: ÷;
}

#add {
    grid-area: A;
}

#subtract {
    grid-area: S;
}

#backspace {
    grid-area: B;
}

#enter {
    grid-area: E;
}

#clear {
    grid-area: C;
}